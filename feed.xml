<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://techbeat.in/feed.xml" rel="self" type="application/atom+xml" /><link href="http://techbeat.in/" rel="alternate" type="text/html" /><updated>2020-01-26T09:18:33-08:00</updated><id>http://techbeat.in/feed.xml</id><title type="html">Show me the code!</title><subtitle>Talk is cheap, show me the code!</subtitle><author><name>Prabhakar Kumar</name></author><entry><title type="html">Setup Arch Linux on a Dell XPS 13 with Windows 10 dual boot</title><link href="http://techbeat.in/2020/01/15/setup-arch-linux-on-dell-xps-13-7390.html" rel="alternate" type="text/html" title="Setup Arch Linux on a Dell XPS 13 with Windows 10 dual boot" /><published>2020-01-15T17:48:53-08:00</published><updated>2020-01-15T17:48:53-08:00</updated><id>http://techbeat.in/2020/01/15/setup-arch-linux-on-dell-xps-13-7390</id><content type="html" xml:base="http://techbeat.in/2020/01/15/setup-arch-linux-on-dell-xps-13-7390.html">&lt;h3 id=&quot;intro&quot;&gt;Intro&lt;/h3&gt;

&lt;p&gt;This article details steps for setting up a functional Arch Linux installation (with a beautiful Deepin Desktop Environment GUI) on a Dell XPS 13, along with the pre-installed Windows 10
in a dual boot configuration. As a developer, I needed an ultrabook class laptop which wasn’t underpowered. Dell XPS 13 fits perfectly in this segment. It is extremely light, has a
unibody design with sturdy hinge and is specwise pretty juicy. After being spoilt with a Macbook Pro for a few years during my previous employment, I never liked the touchpads of
non-mac laptops. Dell XPS 13’s was the first one I did. I believe new HP Spectre and Lenovo carbon laptops might have good touchpads but I haven’t played with them yet.&lt;/p&gt;

&lt;p&gt;I bought the 2019 version of Dell XPS 13 7390 with the following specs&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Core i7 10th Gen 10710U processor (&lt;a href=&quot;https://www.cpubenchmark.net/cpu.php?cpu=Intel+Core+i7-10710U+%40+1.10GHz&amp;amp;id=3567&quot;&gt;CPU Benchmark&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;16GB LPDDR3 2133 MHz RAM,&lt;/li&gt;
  &lt;li&gt;1TB M.2 PCIe NVMe SSD&lt;/li&gt;
  &lt;li&gt;13.3 inch 4K touchscreen display&lt;/li&gt;
  &lt;li&gt;Backlit chiclet keyboard with Fingerprint Reader on the power button&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It cost me $1705.01 USD inclusive of the 10% Washington state sales tax. Too bad, Dell released the 2020 version a few days after I purchased it but I console myself by thinking that
similar configuration is 500 dollars costlier for the 2020 version as of this writing.&lt;/p&gt;

&lt;p&gt;Before you start judging me for why didn’t I buy the Developer Edition as it should have flawless driver support for Linux, I would like to clarify that I did
consider it but for the similar configuration it was only 10 dollars cheaper and didn’t have a fingerprint sensor; the Dell Website didn’t list these in the spec page of
developer edition. I made up my mind to fight driver issues head-on on the Windows edition, should they come up; but touchwood, I didn’t get any that hinder my ability to use the laptop effectively!&lt;/p&gt;

&lt;h4 id=&quot;requirements&quot;&gt;Requirements&lt;/h4&gt;

&lt;p&gt;These set of steps should take less than an hour of your time, assuming you have a fairly performant internet connection as per 2019-2020 standards accessible via a WPA2 encrypted WiFi network.
This article also assumes that you have some basic understanding and familiarity with setting up and running any Linux distro for a while.
This article doesn’t require you to have another laptop with you during the installation process. You should have a USB thumbdrive (a.k.a. pendrive) and the USB-C to USB-A adapter
that comes free with the XPS 13 that may look something like below image.
&lt;img src=&quot;/images/thumb_drive.png&quot; alt=&quot;Thumb drive&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;why-arch&quot;&gt;Why Arch&lt;/h4&gt;

&lt;p&gt;I have been an Arch user since 2011 and never had any issues with it. &lt;a href=&quot;https://wiki.archlinux.org/&quot;&gt;ArchWiki&lt;/a&gt; has probably the best documentation among all distros, and
&lt;a href=&quot;https://aur.archlinux.org/&quot;&gt;AUR&lt;/a&gt; has a comprehensive collection of packages that can be installed if not found in official repositories. With a rolling release model so you DO NOT have to
update your distro every 6 months the new version comes, and serves the latest versions of almost all packages from its repositories. Despite of being rolling release,
it is very stable. It is very lean; on top of a basic Linux system it’s the user who makes all choices for installing only the packages required. And because of rolling release nature, you have
the goodies rolling in everyday. The package manager &lt;code class=&quot;highlighter-rouge&quot;&gt;pacman&lt;/code&gt; is very fast and processes installation of packages in a jiffy.
Using Arch gives you a feeling of being in control of everything.&lt;/p&gt;

&lt;h3 id=&quot;step-1-download-the-arch-installation-image-and-prepare-the-arch-linux-boot-disk&quot;&gt;Step 1: Download the arch installation image and prepare the Arch Linux boot disk&lt;/h3&gt;

&lt;p&gt;Boot into the pre-installed Windows 10 of your Dell XPS 13 and download the Arch Linux latest installation image from this page: &lt;a href=&quot;https://www.archlinux.org/download/&quot;&gt;Arch Linux - Downloads&lt;/a&gt;.
I chose to download the image over BitTorrent protocol. I find it usually faster than HTTP, and it also frees up bandwidth for other needy users to download from HTTP server.&lt;/p&gt;

&lt;p&gt;Once you have the installation image downloaded, you can create a boot disk with it. I use the &lt;code class=&quot;highlighter-rouge&quot;&gt;DD for windows&lt;/code&gt; tool for this which can be downloaded from this
&lt;a href=&quot;http://www.chrysocome.net/download&quot;&gt;download page&lt;/a&gt;. The page appears confusing on first looks as it has lots of files listed for download. You can download the file named
&lt;code class=&quot;highlighter-rouge&quot;&gt;dd-0.6beta3.zip&lt;/code&gt; and extract it, then open up a command window or powershell window, and navigate to the extracted folder.&lt;/p&gt;

&lt;p&gt;The following command will create a Arch boot image in a pendrive that has been inserted and has been assigned the drive letter D. Adjust the command to reflect the correct path
of the downloaded Arch image and the drive letter assigned to the thumbdrive. Ensure that you put the backslashes exactly as shown in the &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; parameter.&lt;/p&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.\dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;C&lt;/span&gt;:\Users\your&lt;span class=&quot;na&quot;&gt;-windows-username&lt;/span&gt;\Downloads\archlinux&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2020&lt;/span&gt;.01.01&lt;span class=&quot;na&quot;&gt;-x&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;_64.iso &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;\\.\d: &lt;span class=&quot;kd&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;M&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;step-2-disable-bitlocker-and-partition-the-disk-for-arch&quot;&gt;Step 2: Disable Bitlocker and partition the disk for Arch&lt;/h3&gt;

&lt;p&gt;Microsoft’s Bitlocker disk encryption can annoy you by forcing you to enter a long encryption key when you attempt to boot Windows after Arch installation. So it is a good idea to disable Bitlocker
beforehand. Type &lt;code class=&quot;highlighter-rouge&quot;&gt;Manage BitLocker&lt;/code&gt; in start menu and disable it for C drive. Or you can go to &lt;code class=&quot;highlighter-rouge&quot;&gt;Control Panel&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;System and Security&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Bitlocker drive encryption&lt;/code&gt; and disable it from there.&lt;/p&gt;

&lt;p&gt;Now you need to free some space up for your Linux installation. You can do this by using the Disk Management tool that comes built-in with Windows 10 or the partitioning tools for linux during
installation process. In this article we are doing it from Windows. Microsoft has nice online documentation for it here:
&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/storage/disk-management/overview-of-disk-management&quot;&gt;Disk Management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press the start button, or the Window key on the keyboard and start typing &lt;code class=&quot;highlighter-rouge&quot;&gt;Create and Format Disk Partitions&lt;/code&gt;. Launch the program. It will show you the layout of the hard disk partition
structure. By default, it comes with a 500MB EFI partition, a very large C drive partition, a WINRETOOLS parition, a factory image partition and a DELLSUPPORT parition. You can shrink the
existing C drive parition to make space for Linux.&lt;/p&gt;

&lt;p&gt;Right click on the C drive partition and choose &lt;code class=&quot;highlighter-rouge&quot;&gt;Shrink Volume ...&lt;/code&gt;. Enter the size for the new partition. The row under it should autocalculate and show you the final size of C drive.
Make sure to keep it reasonable for your Windows needs. I entered 500000 and it resulted in a 488GB of raw unallocated free space.&lt;/p&gt;

&lt;p&gt;I chose to create a 8GB volume for swap space and remaining space for the &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; partition. For this, just right click the newly created unallocated space and click &lt;code class=&quot;highlighter-rouge&quot;&gt;New Simple Volume&lt;/code&gt;
and enter 8192 MB as the size. Choose to not assign a drive letter when asked. Then right click the remaining space, click &lt;code class=&quot;highlighter-rouge&quot;&gt;New Simple Volume&lt;/code&gt; and allocate all the remaining space for  the volume
for &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; partition.&lt;/p&gt;

&lt;p&gt;Some people create separate partition for &lt;code class=&quot;highlighter-rouge&quot;&gt;/home&lt;/code&gt; as well which in my opinion is actually a good idea, because if for some reason your Linux installation gets borked, you can nuke the &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; partition,
install a fresh copy of your OS on it (even different distro altogether) and retain everything in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/home&lt;/code&gt; by setting the mount point in &lt;code class=&quot;highlighter-rouge&quot;&gt;fstab&lt;/code&gt;. This makes everything look like it used to
earlier (assuming certain conditions hold), because of all the user level customizations in the desktop environment being retained in users’ home directory. I find separate partitions for /usr and
/var on personal computers an overkill. For the sake of simplicity we are not creating a separate &lt;code class=&quot;highlighter-rouge&quot;&gt;/home&lt;/code&gt; partition in this article.&lt;/p&gt;

&lt;p&gt;Ultimate result should look something like the below image. If you have created more partitions, they will appear too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/disk_layout.jpg&quot; alt=&quot;Disk Layout&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3-change-sata-mode-to-ahci-and-disable-secureboot&quot;&gt;Step 3: Change SATA mode to AHCI and disable SecureBoot&lt;/h3&gt;

&lt;p&gt;Time to fiddle with some BIOS settings. Before we start installation, we need to change the SATA operation mode in BIOS to AHCI so that the Arch boot disk can recognize the hard disk volumes. If you do not
change the SATA mode to AHCI, Arch installation disk won’t recognize your NVMe M.2 hard disk in XPS 13.&lt;/p&gt;

&lt;p&gt;Get into the BIOS settings by rebooting the computer and pressing F12 repeatedly until you see the text &lt;code class=&quot;highlighter-rouge&quot;&gt;Preparing one time boot menu&lt;/code&gt; in the top right corner of the screen.
Then click &lt;code class=&quot;highlighter-rouge&quot;&gt;BIOS Setup1 and change the SATA operation to AHCI under &lt;/code&gt;System Configuration` section of the left sidebar. Here’s a screenshot that may come handy identifying where to do this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/sata_mode.png&quot; alt=&quot;SATA Mode AHCI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also, disable SecureBoot in BIOS because it won’t allow setting up Grub which is the de-facto bootloader for Linux distributions. Below screenshot shows how to disable SecureBoot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/secure_boot.jpg&quot; alt=&quot;Disable secure boot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Save the change which will result in a system restart.&lt;/p&gt;

&lt;h3 id=&quot;step-4-boot-the-arch-installation-media&quot;&gt;Step 4: Boot the arch installation media&lt;/h3&gt;

&lt;p&gt;Press the F12 key repeatedly while the ssytem is starting and get into the One Time Boot Menu again and choose the pendrive as the boot device, as shown in the screenshot below.
&lt;img src=&quot;/images/boot_device.png&quot; alt=&quot;Boot device&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If the disk image was created correctly you should see the Arch Boot Menu as shown below. Choose the first option and press enter.
&lt;img src=&quot;/images/arch_boot.png&quot; alt=&quot;Arch boot menu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You should see the &lt;code class=&quot;highlighter-rouge&quot;&gt;root@archiso&lt;/code&gt; prompt in a few moments. Please note that, on the 4K display XPS 13, the letters in the terminal during installation look extremely small. However, you have to
face this problem only during installation and after the installation of a GUI everything should start looking good.&lt;/p&gt;

&lt;h3 id=&quot;step-5-connect-to-the-network-and-enable-ntp-time-sync&quot;&gt;Step 5: Connect to the network and enable NTP time sync&lt;/h3&gt;

&lt;p&gt;I assume you have a WiFi network in range. You can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;wifi-menu&lt;/code&gt; command that comes pre-installed in the installation disk. It has a nice curses based UI where you can choose the WiFi network
from a menu of options and enter its password to connect to it. Test the connection by running &lt;code class=&quot;highlighter-rouge&quot;&gt;ping archlinux.org&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now set the time with NTP by running&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;timedatectl set-ntp &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-6-setup-filesystems&quot;&gt;Step 6: Setup filesystems&lt;/h3&gt;

&lt;p&gt;Run the below command&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /dev/nvme&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;to check for the block devices. It is highly likely that you should be able to identify &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/nvme0n1&lt;/code&gt; as the block device representing your hard disk, which is because all XPS 13s come
with NVME based M.2 SSDs. You can verify this by running &lt;code class=&quot;highlighter-rouge&quot;&gt;fdisk -l /dev/nvme0n1&lt;/code&gt; which should output the list of Windows partition that already exist and the raw partitions.&lt;/p&gt;

&lt;p&gt;Carefully check the output of the fdisk command above, and figure out the partition number for the swap and / partitions that we created in Step 1. For me, the output looks like this.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fdisk -l /dev/nvme0n1

Disk /dev/nvme0n1: 953.89 GiB, 1024209543168 bytes, 2000409264 sectors
Disk model: PC601 NVMe SK hynix 1TB                 
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: 7EED0FB4-482A-45A9-A7CE-55E525352534

Device              Start        End    Sectors   Size Type
/dev/nvme0n1p1       2048    1394687    1392640   680M EFI System
/dev/nvme0n1p2    1394688    1656831     262144   128M Microsoft reserved
/dev/nvme0n1p3    1656832  944373759  942716928 449.5G Microsoft basic data
/dev/nvme0n1p4  944373760  961150975   16777216     8G Microsoft basic data
/dev/nvme0n1p5  961150976 1968371711 1007220736 480.3G Microsoft basic data
/dev/nvme0n1p6 1968373760 1970401279    2027520   990M Windows recovery environment
/dev/nvme0n1p7 1970401280 1997346815   26945536  12.9G Windows recovery environment
/dev/nvme0n1p8 1997348864 2000408575    3059712   1.5G Windows recovery environment
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was able to figure out that &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/nvme0n1p4&lt;/code&gt; was the 8GB partition I created for swap and the &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/nvme0n1p5&lt;/code&gt; was the partition I created for root filesystem. Enable swap on the swap parititon
and format the partition for root filesystem into ext4.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkfs.ext4 /dev/nvme0n1p5
mkswap /dev/nvme0n1p4
swapon /dev/nvme0n1p4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we are ready with filesystems, we can go ahead mounting them and starting installation.&lt;/p&gt;

&lt;h3 id=&quot;step-7-mount-partitions-and-install-needed-packages&quot;&gt;Step 7: Mount partitions and install needed packages&lt;/h3&gt;

&lt;p&gt;Create a directory &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/root&lt;/code&gt; to mount the root filesystem and EFI system partition on &lt;code class=&quot;highlighter-rouge&quot;&gt;/mnt/root/boot&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /mnt/root /mnt/root/boot
mount /dev/nvme0n1p5 /mnt/root
mount /dev/nvme0n1p1 /mnt/root/boot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; in a text editor like &lt;code class=&quot;highlighter-rouge&quot;&gt;vim&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;nano&lt;/code&gt;. Bring a few mirror URLs closest to you geographically to the top of the file. Since, I live on the west coast of USA,
I brought a few US west coast pacman mirrors onto the top. This should ensure that the package installation command runs fast.&lt;/p&gt;

&lt;p&gt;Now install the necessary packages using pacstrap.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacstrap /mnt/root base linux linux-firmware base-devel grub os-prober intel-ucode alsa deepin deepin-extra &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lightdm lightdm-deepin-greeter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I like deepin as my desktop environment as it looks beautiful and has a perfect traditional desktop look and feel. If you want Gnome, or KDE, or LXDE, or LXQT, or XFCE or any other desktop environment
instead, feel free to modify the above command and install corresponding packages.&lt;/p&gt;

&lt;h3 id=&quot;step-8-configure-base-system&quot;&gt;Step 8: Configure base system&lt;/h3&gt;

&lt;p&gt;Generate an fstab file by running &lt;code class=&quot;highlighter-rouge&quot;&gt;genfstab -U /mnt/root &amp;gt;&amp;gt; /mnt/root/etc/fstab&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now chroot into the system to configure some other necessary stuff. Arch installation image has a handy chroot wrapper script named &lt;code class=&quot;highlighter-rouge&quot;&gt;arch-chroot&lt;/code&gt;, which chroots into the installed root filesystem
and also binds necessary virtual filesystem mounts like &lt;code class=&quot;highlighter-rouge&quot;&gt;proc&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;sys&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; correctly from the currently running installation OS.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arch-chroot /mnt/root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;set-timezone&quot;&gt;Set timezone&lt;/h4&gt;

&lt;p&gt;Set the time zone by creating a symlink to the zoneinfo file for your region at &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/localtime&lt;/code&gt;. Command below is for US West Coast. You can change it according to your region.
Also, set the clock to use UTC.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sf&lt;/span&gt; /usr/share/zoneinfo/Americas/Los_Angeles
hwclock &lt;span class=&quot;nt&quot;&gt;--systohc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;set-locale&quot;&gt;Set locale&lt;/h4&gt;

&lt;p&gt;Open &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/locale.gen&lt;/code&gt; in vi or nano and uncomment the &lt;code class=&quot;highlighter-rouge&quot;&gt;en_US.UTF-8 UTF-8&lt;/code&gt; line. Then run &lt;code class=&quot;highlighter-rouge&quot;&gt;locale-gen&lt;/code&gt;. After this, open &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/locale.conf&lt;/code&gt; and add a line &lt;code class=&quot;highlighter-rouge&quot;&gt;LANG=en_US.UTF-8&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;network-configurations&quot;&gt;Network configurations&lt;/h4&gt;

&lt;p&gt;Create the hostname file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hostname&lt;/code&gt; and add a name for your laptop, for example &lt;code class=&quot;highlighter-rouge&quot;&gt;my-xps&lt;/code&gt;. Also update the hostname in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; so it looks like below:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1   localhost
::1         localhost
127.0.1.1   my-xps.localdomain my-xps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Deepin comes with NetworkManager but it didn’t work as expected for me for connecting to WiFi. So you might want to disable NetworkManager and install netctl.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl disable NetworkManager
pacman &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; netctl wpa_supplicant dhcpcd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also create a &lt;code class=&quot;highlighter-rouge&quot;&gt;netctl&lt;/code&gt; profile right away so that you do not need to struggle connecting to the internet when you reboot after the installation is finished.&lt;/p&gt;

&lt;p&gt;Create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/netctl/MyWiFi&lt;/code&gt; and put the following content. This assumes that your home WiFi network name is &lt;code class=&quot;highlighter-rouge&quot;&gt;MyWiFi&lt;/code&gt;. I also faced lag and disconnection issues with
5GHz wifi networks so for now I am using a 2.4GHz network only. I haven’t spent time figuring out the cause and fixing it, I may update this article when I do.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Description='My home WiFi connection'
Interface=wlp2s0
Connection=wireless

Security=wpa
IP=dhcp

ESSID='MyWiFi'  # &amp;lt;=== Put your WiFi network's name here
Key='12345678' # &amp;lt;== Put your WiFi password here
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;build-initramfs&quot;&gt;Build initramfs&lt;/h4&gt;

&lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;mkinitcpio -P&lt;/code&gt; to build the initramfs.&lt;/p&gt;

&lt;h3 id=&quot;set-root-password&quot;&gt;Set root password&lt;/h3&gt;

&lt;p&gt;Set a root password by running the &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd&lt;/code&gt; command.&lt;/p&gt;

&lt;h3 id=&quot;step-9-configure-grub&quot;&gt;Step 9: Configure Grub&lt;/h3&gt;

&lt;p&gt;During pacstrap we installed &lt;code class=&quot;highlighter-rouge&quot;&gt;grub&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;os-prober&lt;/code&gt; so, now we just need to install grub and create a config for it. If &lt;code class=&quot;highlighter-rouge&quot;&gt;os-prober&lt;/code&gt; is installed, &lt;code class=&quot;highlighter-rouge&quot;&gt;grub-mkconfig&lt;/code&gt; command automatically
detects Windows partition, if any and adds an entry for booting into it in the boot menu.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;grub-install &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x86_64-efi &lt;span class=&quot;nt&quot;&gt;--efi-directory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/mnt/root/boot &lt;span class=&quot;nt&quot;&gt;--bootloader-id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;GRUB
grub-mkconfig &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-10-create-a-user-and-enable-sudo&quot;&gt;Step 10: Create a user and enable sudo&lt;/h3&gt;

&lt;p&gt;Create a non-root user and add it to necessary groups (at least &lt;code class=&quot;highlighter-rouge&quot;&gt;wheel&lt;/code&gt;). Replace the username &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; in below command with your desired username.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;useradd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; wheel &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/bash master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also set a password for this account by running &lt;code class=&quot;highlighter-rouge&quot;&gt;passwd master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;visudo&lt;/code&gt; to open sudoers file. Find the line that allows members of group wheen to run sudo commands without password and uncomment it. It should look something like below:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%wheel ALL=(ALL) NOPASSWD: ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, it is not recommended for everybody to configure sudo without password. You might want to configure it to be used with password instead by uncommenting the following line instead.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%wheel ALL=(ALL) ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-11-prepare-for-reboot&quot;&gt;Step 11: Prepare for reboot&lt;/h3&gt;

&lt;p&gt;Now your arch installation is ready to boot into. But before that, we need to perform one final configuration, which is to configure &lt;code class=&quot;highlighter-rouge&quot;&gt;lightdm&lt;/code&gt; - the display manager to use &lt;code class=&quot;highlighter-rouge&quot;&gt;deepin&lt;/code&gt;’s greeter.&lt;/p&gt;

&lt;p&gt;Open the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/lightdm/lightdm.conf&lt;/code&gt;. Find the line that says &lt;code class=&quot;highlighter-rouge&quot;&gt;#greeter-session&lt;/code&gt;, uncomment it and update it to use deepin’s greeter as shown below.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;greeter-session=lightdm-deepin-greeter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Also, enable lightdm by running &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl enable lightm&lt;/code&gt;. Now reboot by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;reboot&lt;/code&gt;. You should be greeted by a beautiful login screen. When you login, you will see a desktop resembling the below
screenshot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/deepin_desktop.png&quot; alt=&quot;Deepin desktop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Deepin desktop comes with a dock by default but I prefer a task bar instead. You can right click the dock and change the mode to &lt;code class=&quot;highlighter-rouge&quot;&gt;Efficient Mode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dock_mode.png&quot; alt=&quot;Deepin taskbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You might also want to change the size of icons to small instead of large.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/dock_size.png&quot; alt=&quot;Deepin taskbar size&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If the font sizes look too small or too large, you can adjust the scaling factor by right clicking the desktop, choosing &lt;code class=&quot;highlighter-rouge&quot;&gt;Display Settings&lt;/code&gt; as shown in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/display_scale.png&quot; alt=&quot;Display Scaling&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-13-fix-windows&quot;&gt;Step 13: Fix windows&lt;/h3&gt;

&lt;p&gt;Since we overwrote Windows’s EFI partition, it will refuse to boot. But there is a simple trick to fix that. You just need to boot Windows in safe mode once and it figures out stuff automatically.
Kudos to Microsoft for this! If you try booting Windows from the Grub menu it will get into the dreaded blue screen of death. But from there you will get an option to attempt to diagnose
and fix boot problems. There you can choose to boot into safe mode. Once you have successfully made it into safe mode, you should also make a change in Windows registry so that it treats hardware
clock to be in UTC. This way the time shown in Linux as well as Windows will be similar. For that, just open a command prompt with administrator privileges and run the following command:&lt;/p&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;/v &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;RealTimeIsUniversal&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;/d &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;/t &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;REG_QWORD&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;/f
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or you could open &lt;code class=&quot;highlighter-rouge&quot;&gt;regedit&lt;/code&gt; and manually navigate to the above key and add a new QWORD value of 1 for &lt;code class=&quot;highlighter-rouge&quot;&gt;RealTimeIsUniversal&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-14-all-set&quot;&gt;Step 14: All set&lt;/h3&gt;

&lt;p&gt;Assuming that you sailed through the process smoothly, congratulations! You now have your Dell XPS 13 with a dual boot setup of Windows 10 and Arch Linux. If you are a developer like me, you might want
to change your shell to zsh, install Git, Vim, htop, Ruby, NodeJS, JDK, Postman, Docker, Visual Studio Code, IntelliJ Idea Community Edition and other development tools and platforms to facilitate your
development workflow. As general utilities, you might want to install Gimp for photo editing, imagemagick, VLC media player, xarchiver, p7zip-full, unrar, Evince for PDF viewing, Chromium and Firefox
for web browsing and Audacious for listening to your music collection.&lt;/p&gt;

&lt;p&gt;Here’s an obligatory screenshot (compressed JPEG) of my final setup.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/arch_desktop.jpg&quot; alt=&quot;Arch Desktop&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;known-issues&quot;&gt;Known Issues&lt;/h3&gt;

&lt;p&gt;I have found the following issues on my Dell XPS 13 (with factory installed Windows) while using Arch Linux:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Looses connection to 5G WiFi network intermittently (however 2.4GHz networks work perfectly)&lt;/li&gt;
  &lt;li&gt;Cannot use NetworkManager to connect to WiFi networks. Netctl works flawlessly, but to make your life easier install wifi-menu from AUR.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Prabhakar Kumar</name></author><category term="archlinux" /><category term="dell-xps-13" /><summary type="html">Intro</summary></entry><entry><title type="html">Run your webapps on Kubernetes for cheap</title><link href="http://techbeat.in/2019/04/11/run-your-webapps-on-kubernetes-for-cheap.html" rel="alternate" type="text/html" title="Run your webapps on Kubernetes for cheap" /><published>2019-04-11T09:48:53-07:00</published><updated>2019-04-11T09:48:53-07:00</updated><id>http://techbeat.in/2019/04/11/run-your-webapps-on-kubernetes-for-cheap</id><content type="html" xml:base="http://techbeat.in/2019/04/11/run-your-webapps-on-kubernetes-for-cheap.html">&lt;h3 id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;This post details how to spin off a 3 node Kubernetes cluster on Google Cloud, paying close to 7 dollars a month for it and host multiple database backed dynamic websites and API apps.&lt;/p&gt;

&lt;h3 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h3&gt;

&lt;p&gt;This is a hands on article to get started with Kubernetes. Some of the terminology and descriptions in this article have been simplified to make it approachable to people unfamiliar with
Kubernetes. For technical purity, Kubernetes’s official documentation can be consulted.&lt;/p&gt;

&lt;h3 id=&quot;intro&quot;&gt;Intro&lt;/h3&gt;

&lt;p&gt;Kubernetes is the new cool kid on the block (bye bye blockchain!). Listing it as an skill in your LinkedIn profile will definitely get you some recruiter attention.
It is &lt;em&gt;the solution&lt;/em&gt; for all your dev-ops woes!&lt;/p&gt;

&lt;p&gt;I used to run all of my hobby projects in docker containers with lifecycles managed by docker-compose files. I had a VM from &lt;a href=&quot;https://scaleway.com&quot;&gt;scaleway&lt;/a&gt; with 4 gigs of memory,
100 gigs of SSD storage and dual core x86 CPU for which I used to pay around 5 Euros a month. I was happy until I learnt about Kubernetes and then I realized &lt;em&gt;ignorance is bliss&lt;/em&gt;.
After reading this post, you will be able to spin off a 3 node Kubernetes cluster on Google Cloud with 0.6GB memory each and 1 vCPU each and pay roughly ~7 dollars a month for it!
If you want a beefier cluster you can choose a different configuration for nodes and for 40 dollars a month you get 11.25GB of memory at your disposal, three compute cores with which you can do
wonders - host several high traffic webapps backed by different databases! Adding to that, with Google Cloud’s free trial program you can have this cluster running for free for almost an year!&lt;/p&gt;

&lt;p&gt;My three node cluster currently runs &lt;code class=&quot;highlighter-rouge&quot;&gt;mongodb&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;postgres&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;, two rails web applications, a nodeJS web application, a dotnetcore web application, a spring boot based Java REST API application
which powers an Android app, and still has a lot of resources remaining to do 3-4 times more of what it currently does. All the web apps are fronted by nginx and configured with different server blocks
for different domain names (a.k.a virtual hosts). All the domain names have their own letsencrypt https certificates that automatically renew every three months. Two of the apps use mongodb and
the other two postgres.&lt;/p&gt;

&lt;h4 id=&quot;single-vm-vs-cluster&quot;&gt;Single VM vs Cluster&lt;/h4&gt;

&lt;p&gt;Running all your workloads in a single VM is like putting all the eggs in the same basket. If ever the VM is restarted for updating the Kernel, reclaim some leaked memory or something else;
all the apps hosted on the box incur downtime. Running on Kubernetes is better, because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cloud provider (GCP) manages updates and patches on your VMs, so you don’t need to explicitly restart nodes. In case of node restarts, Kubernetes ensures relocating workloads running on the unavailable VM.&lt;/li&gt;
  &lt;li&gt;Kubernetes restarts containers automatically when underlying process crashes due to some issue.&lt;/li&gt;
  &lt;li&gt;Kubernetes handles load balancing of requests and scaling of resources to fulfill the requests. For example, you can tell Kubernetes declaratively to run more instances of your webapp when the load is higher.&lt;/li&gt;
  &lt;li&gt;Kubernetes sets up internal networking in the cluster so that your apps can talk to each other. This enables you to build microservices based large scale services.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Besides, using Kubernetes to run your compute infrastructure is considered cool in 2019!&lt;/p&gt;

&lt;h3 id=&quot;what-is-kubernetes&quot;&gt;What is Kubernetes?&lt;/h3&gt;

&lt;p&gt;Kubernetes’s official website writes:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kubernetes is a portable, extensible open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This might not be quite an approachable description for everybody. Here is my attempt:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kubernetes is like an operating system, for your distributed computing cluster that lets you run your scalable applications without being bothered about nodes in the cluster going down, request routing, load balancing, networking and other devops hassles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;lets-get-started&quot;&gt;Let’s get started&lt;/h3&gt;

&lt;h4 id=&quot;step-1-setup-a-3-node-cluster-on-google-cloud&quot;&gt;Step 1: Setup a 3-node cluster on Google Cloud&lt;/h4&gt;

&lt;p&gt;Register on Google Cloud, if you already haven’t. Create a project, setup billing. Click the hamburger menu icon (&lt;img src=&quot;/images/hamburger.png&quot; alt=&quot;menu&quot; /&gt;) on the top left, and in &lt;em&gt;Compute&lt;/em&gt; section,
click &lt;em&gt;Kubernetes Engine&lt;/em&gt;. Click the &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Clusters&lt;/code&gt; button. Make sure in the left pane, cluster template is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;Standard cluster&lt;/code&gt;. In the right pane, name your cluster;
for example &lt;em&gt;blog-cluster&lt;/em&gt;. Fill in the settings as listed below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Location type&lt;/em&gt;: Zonal&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Zone&lt;/em&gt;: us-central1-a&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under node pools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Number of nodes&lt;/em&gt;: 3&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Machine type&lt;/em&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;n1-standard-1&lt;/code&gt; (this will cost roughly $40/month for 3 nodes). Choose &lt;code class=&quot;highlighter-rouge&quot;&gt;f1-micro&lt;/code&gt; for $7/month instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click &lt;em&gt;More node pool options&lt;/em&gt; and ensure that the following are set:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Enable autoscaling&lt;/em&gt;: off&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Boot disk type&lt;/em&gt;: Standard persistent disk&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Boot disk size&lt;/em&gt;: 10 GB&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Enable pre-emptible nodes&lt;/em&gt;: Yes - you must do this for cost cutting. These nodes get terminated within 24 hours and get replaced with another one and cost around one-fourth of regular nodes.
Since Kubernetes can handle node downtimes, we need not worry about our app going down when GCP replaces a VM.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click &lt;em&gt;Availability, networking, security, and additional features&lt;/em&gt; and ensure the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Enable HTTP load balancing&lt;/em&gt;: No - this is costly! We will use Kubernetes’s default balancer&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Enable Stackdriver Logging service&lt;/em&gt;: No&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Enable Stackdriver Monitoring service&lt;/em&gt;: No&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Enable Kubernetes Dashboard&lt;/em&gt;: No&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leave all the other settings to their sane defaults. Changing some of them might cost you extra money. Click the &lt;code class=&quot;highlighter-rouge&quot;&gt;Create&lt;/code&gt; button and wait for the cluster to come up. The clusters page should
show your newly created cluster.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kubernetesclusters.png&quot; alt=&quot;Clusters&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-2-connect-to-your-newly-minted-cluster&quot;&gt;Step 2: Connect to your newly minted cluster&lt;/h4&gt;

&lt;p&gt;Install &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; command line utility for your OS. In the &lt;em&gt;Clusters&lt;/em&gt; page, click &lt;em&gt;Connect&lt;/em&gt; and it will show you a &lt;code class=&quot;highlighter-rouge&quot;&gt;gcloud&lt;/code&gt; command which downloads the necessary authentication information
for the &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl&lt;/code&gt; command. Run the command. Once you have done that, test your connection by running &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl get nodes&lt;/code&gt; which should return you a list of three nodes.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl get nodes
NAME                                          STATUS   ROLES    AGE   VERSION
gke-blog-cluster-default-pool-edcca0b2-4mf2   Ready    &amp;lt;none&amp;gt;   1m    v1.11.7-gke.12
gke-blog-cluster-default-pool-edcca0b2-hd1p   Ready    &amp;lt;none&amp;gt;   1m    v1.11.7-gke.12
gke-blog-cluster-default-pool-edcca0b2-z6f1   Ready    &amp;lt;none&amp;gt;   1m    v1.11.7-gke.12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;step-3-prepare-your-first-application&quot;&gt;Step 3: Prepare your first application&lt;/h4&gt;

&lt;p&gt;Let’s prepare a rails application that uses a &lt;code class=&quot;highlighter-rouge&quot;&gt;postgresql&lt;/code&gt; database to deploy on this cluster. We will name it &lt;code class=&quot;highlighter-rouge&quot;&gt;RailsPortal&lt;/code&gt;, you are free to name whatever you want.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler
gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rails
rails new RailsPortal
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Last command should start a local server at port 3000 and you should be able to access it at &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:3000&lt;/code&gt;. Stop the server by running &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl-C&lt;/code&gt;. Open &lt;code class=&quot;highlighter-rouge&quot;&gt;config/database.yml&lt;/code&gt; and around the
end change the production db connection settings so that they look like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;production:
  &amp;lt;&amp;lt;: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;default
  adapter: postgresql
  url: &amp;lt;%&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ENV[&lt;span class=&quot;s1&quot;&gt;'DATABASE_URL'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; and add a line &lt;code class=&quot;highlighter-rouge&quot;&gt;gem 'pg'&lt;/code&gt; then run &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle update&lt;/code&gt;. The above changes will configure the production instance of app to use postgresql instead of default sqlite and 
will let us pass the &lt;code class=&quot;highlighter-rouge&quot;&gt;postgresql&lt;/code&gt; connection string through an environment variable that Kubernetes will setup for us later.&lt;/p&gt;

&lt;p&gt;Let’s create a scaffold with two fields and see whether things are working fine.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails g scaffold User name:string about:string
bin/rails db:migrate &lt;span class=&quot;nv&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will generate necessary views and controllers which we can use to insert some data and ensure that things are working fine. Second command will commit pending database migrations.
Start the server again  by running &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec rails s&lt;/code&gt; and access the url &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:3000/users&lt;/code&gt; and click &lt;code class=&quot;highlighter-rouge&quot;&gt;New User&lt;/code&gt; and try adding a new record.&lt;/p&gt;

&lt;p&gt;Now that our test application is ready, let’s containerize it. If you do not have docker installed, now is the time to install it and start the docker service.
Once we build the container, we want to push it to a private docker repository. &lt;a href=&quot;https://hub.docker.com&quot;&gt;Docker Hub&lt;/a&gt; lets you store container images for free. Register on their website then connect
your local &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; command to your docker hub account by running the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker login &lt;span class=&quot;nt&quot;&gt;--username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DockerHubUsername &lt;span class=&quot;nt&quot;&gt;--email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;DockerHubEmail
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For building the container image, we need to create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; which tells docker how to build the container. Create this &lt;em&gt;Dockerfile&lt;/em&gt; in rails portal’s root directory.&lt;/p&gt;

&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ruby:2.5-alpine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apk add &lt;span class=&quot;nt&quot;&gt;--no-cache&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--update&lt;/span&gt; nodejs postgresql-dev libpq tzdata imagemagick
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apk add &lt;span class=&quot;nt&quot;&gt;--no-cache&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--update&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--virtual&lt;/span&gt; build-deps build-base git
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/share/zoneinfo/UTC /etc/localtime

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; . /app&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /app&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'gem: --no-document'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /etc/gemrc
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--jobs&lt;/span&gt; 4 &lt;span class=&quot;nt&quot;&gt;--without&lt;/span&gt; development &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apk del build-deps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure the ruby version in Dockerfile is consistent with the one in Gemfile. Now build and push the container to docker hub by running following commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; DockerHubUsername/RailsPortal &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
docker push DockerHubUsername/RailsPortal
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;step-4-architect-your-infrastructure&quot;&gt;Step 4. Architect your infrastructure&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/images/kube_rails.png&quot; alt=&quot;Rails on Kubernetes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are going to use a simple architecture &lt;em&gt;client -&amp;gt; Webserver (nginx) -&amp;gt; Web app (rails) -&amp;gt; Database (postgres)&lt;/em&gt; which is quite popular for single VM setups too. Only difference is that instead
of processes running on a VM, these will be containers and will be run on different nodes of the cluster by Kubernetes.&lt;/p&gt;

&lt;h4 id=&quot;step-5-plan-kubernetes-resources&quot;&gt;Step 5. Plan Kubernetes resources&lt;/h4&gt;

&lt;p&gt;Kubernetes has the concept of resources. The ones we are going to use in this project are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deployment&lt;/li&gt;
  &lt;li&gt;Service&lt;/li&gt;
  &lt;li&gt;StorageClass&lt;/li&gt;
  &lt;li&gt;PersitentVolumeClaim&lt;/li&gt;
  &lt;li&gt;PersistentVolume&lt;/li&gt;
  &lt;li&gt;Secret&lt;/li&gt;
  &lt;li&gt;ConfigMap&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A &lt;em&gt;deployment&lt;/em&gt; describes a container to run along with the volumes it needs, environment variables, ports it should listen to, number of replicas of it Kubernetes should run in the cluster etc.
There are many more things we can configure for a deployment, but these are the ones we are going to use in our little project. In this article, I might use the terms deployment and container
interchangeably - because in practice a Kubernetes deployment is a container running in the cluster.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;service&lt;/em&gt; fronts a deployment by giving it a stable private or public endpoint on which the deployment (running container) can be accessed. Private endpoints are exposed by service of type
ClusterIP and public endpoints are exposed by service of type LoadBalancer. Private endpoints are accessible only inside the cluster, from other containers. For example, a postgres deployment
should only be accessible from deployments running in the cluster, for example a web application.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;storage class&lt;/em&gt; is to define the characteristics of volumes that can be created on demand. We create this once and create persistent volume claims that refer to it.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;persistent volume&lt;/em&gt; is a storage accessible from any of the running containers on the cluster which are configured to access it. As containers are stateless, we need a reliable persistent store
to store our stateful data, for example postgres’s data files.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;persistent volume claim&lt;/em&gt; is an access mechanism for a container to access a persistent volume. We will talk about it ahead in the article when we need it.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;secret&lt;/em&gt; is used to store authentication credentials and expose it to only the resources that need it.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;config map&lt;/em&gt; is a keyvalue pair, that can be used to store configuration information in the cluster which can be used from a container.&lt;/p&gt;

&lt;p&gt;Kubernetes provides us a declarative way of telling it about the resources we need to create (a &lt;em&gt;goal state&lt;/em&gt; of our infrastructure) and then it tries to create those resources (or achieve the
&lt;em&gt;goal state&lt;/em&gt;). We declare the properties for resources in &lt;em&gt;yaml&lt;/em&gt; files and Kubernetes takes care of it.&lt;/p&gt;

&lt;p&gt;For our little project, we will be creating the following resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A deployment for nginx, which we will use to front our web applications (rails)&lt;/li&gt;
  &lt;li&gt;A service of type load balancer for nginx, such that users can access our applications from external the internet&lt;/li&gt;
  &lt;li&gt;A config map for the nginx configuration files&lt;/li&gt;
  &lt;li&gt;A secret to store authentication information for docker hub so that kubernetes can pull the rails application container that we pushed to our private docker hub repository&lt;/li&gt;
  &lt;li&gt;A deployment for rails portal, whose container we built in step 4&lt;/li&gt;
  &lt;li&gt;A service for rails portal, so that nginx can access it forward requests to it&lt;/li&gt;
  &lt;li&gt;A deployment for postgres, which will run the container&lt;/li&gt;
  &lt;li&gt;A service for postgres so that rails application can connect to it&lt;/li&gt;
  &lt;li&gt;A storage class for postgres that defines the kind of storage to be used for persistent volumes. E.g, SSD/magnetic etc.&lt;/li&gt;
  &lt;li&gt;A persistent volume claim for postgres so that the postgres deployment can access the persistent volume&lt;/li&gt;
  &lt;li&gt;A persistent volume for postgres, so that we can have postgres store its data files there&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;step-6-setting-up-nginx&quot;&gt;Step 6. Setting up nginx&lt;/h4&gt;

&lt;p&gt;Let’s begin by creating a deployment for nginx. Create a directory named nginx. Below gist is for a yaml file that we will use to describe nginx deployment on Kubernetes. Copy
its contents to a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx-dep.yml&lt;/code&gt; on your local computer.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/6e870acd7e91273a747996961a2a04c2.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;It declares that we want to create a resource of type &lt;code class=&quot;highlighter-rouge&quot;&gt;Deployment&lt;/code&gt;, label it with name &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;, use the container &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; with tag &lt;code class=&quot;highlighter-rouge&quot;&gt;mainline-alpine&lt;/code&gt;, and expose the container’s port 80.
By default the container image is pulled from docker hub. Now run &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl apply -f nginx-dep.yml&lt;/code&gt; to let Kubernetes do its magic.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; nginx-dep.yml
deployment.apps/nginx-dep created
% kubectl get pods
NAME                         READY   STATUS    RESTARTS   AGE
nginx-dep-776c646dc6-g4w9x   1/1     Running   0          25s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output of last command tells us that an nginx deployment is running since 25 seconds. Yes, you just noticed that we used a new term &lt;code class=&quot;highlighter-rouge&quot;&gt;pods&lt;/code&gt; in the command. A pod can be considered as an application
for all practical purposes. You can find about it more in official Kubernetes documentation.&lt;/p&gt;

&lt;p&gt;Let’s create an LB now so that we can access the running container from outside. Copy the below contents to a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx-svc.yml&lt;/code&gt;.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/d76f720c5b9d666965e959861e5e33b3.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;This file declares that we want a resource of kind &lt;code class=&quot;highlighter-rouge&quot;&gt;Service&lt;/code&gt; of type &lt;code class=&quot;highlighter-rouge&quot;&gt;LoadBalancer&lt;/code&gt; which should accept connections on port 80 and direct to port 80 of a service. Which service? The service is selected
using the selector parameter which says to match it with the &lt;code class=&quot;highlighter-rouge&quot;&gt;app: nginx&lt;/code&gt; which we had specified in our &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx-dep.yml&lt;/code&gt; file. Let’s deploy this file too.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; nginx-svc.yml
service/nginx-lb created
% kubectl get svc
NAME         TYPE           CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;        AGE
kubernetes   ClusterIP      10.59.240.1     &amp;lt;none&amp;gt;        443/TCP        4m
nginx-lb     LoadBalancer   10.59.240.108   &amp;lt;pending&amp;gt;     80:31463/TCP   24s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This shows that the resource with name nginx-lb and type LoadBalancer has been created. But it is pending an external ip. Wait for some time and run the command again to get the external ip.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl get svc
NAME         TYPE           CLUSTER-IP      EXTERNAL-IP    PORT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;        AGE
kubernetes   ClusterIP      10.59.240.1     &amp;lt;none&amp;gt;         443/TCP        5m
nginx-lb     LoadBalancer   10.59.240.108   34.66.92.238   80:31463/TCP   1m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, if you try typing the shown external ip in a browser, you should be able to get the nginx’s welcome page! Awesome! You can change a domain’s A record to point to this IP address and this
will be accessible from any browser through the domain name.&lt;/p&gt;

&lt;h4 id=&quot;step-7-setting-up-postgres&quot;&gt;Step 7. Setting up postgres&lt;/h4&gt;

&lt;p&gt;Our webapp will need Postgres to store its data. Since we need postgres’s data to be persistent across container and node restarts, we need to create a persistent volume. For that we first
create a storage class with type SSD. Then we create a persistent volume claim that uses this newly created storage class. A persistent volume gets automatically created, when we try to create
a persistent volume claim using the storage class of &lt;code class=&quot;highlighter-rouge&quot;&gt;kubernetes.io/gce-pd&lt;/code&gt;. We can also club two related storage related declarations into a single yaml file as shown below.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/45ddec715c5e9840e715db5d1b0282ab.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Let’s create the resources from this yml file and check their statuses.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; postgres-storage.yml
storageclass.storage.k8s.io/postgres-ssd created
persistentvolumeclaim/postgres-disk-claim created
% kubectl get pvc
NAME                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
postgres-disk-claim   Bound    pvc-79f8200b-5c64-11e9-978f-42010a800070   1Gi        RWO            postgres-ssd   12s
% kubectl get pv
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                         STORAGECLASS   REASON   AGE
pvc-79f8200b-5c64-11e9-978f-42010a800070   1Gi        RWO            Delete           Bound    default/postgres-disk-claim   postgres-ssd            12s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that our storage for postgres is all set, we can create the deployment and service. Let’s club both the declarations in the same yaml file as we did with the storage. Its a good practice to 
club logically related resources in a single file.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/62e68cf0f42e24c09e9a91e6cf393b08.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;In the deployment, we specify that we will run the &lt;em&gt;postgres&lt;/em&gt; container with tag &lt;em&gt;10-alpine&lt;/em&gt; from docker hub. We also set environment variables for username, password and data directory. You
should note that we specify a volume mount and configure it to use the persistent volume claim we created earlier and we mount that 1GB storage volume at &lt;em&gt;/data&lt;/em&gt; directory in the container.
We also create a service (with type &lt;code class=&quot;highlighter-rouge&quot;&gt;ClusterIP&lt;/code&gt; being the default) and configure its app selector to postgres and specify that port 5432 on the container be made available for other apps in the cluster.&lt;/p&gt;

&lt;p&gt;Let’s create the service and deployment and check the status on the cluster.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; postgres-dep.yml
deployment.extensions/postgres created
service/postgres created
% kubectl get pods
NAME                         READY   STATUS    RESTARTS   AGE
nginx-dep-776c646dc6-g4w9x   1/1     Running   0          8m
postgres-6969669b9f-4f42h    1/1     Running   0          54s
% kubectl get svc
NAME         TYPE           CLUSTER-IP      EXTERNAL-IP    PORT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;        AGE
kubernetes   ClusterIP      10.59.240.1     &amp;lt;none&amp;gt;         443/TCP        15m
nginx-lb     LoadBalancer   10.59.240.108   34.66.92.238   80:31463/TCP   7m
postgres     ClusterIP      10.59.243.25    &amp;lt;none&amp;gt;         5432/TCP       48s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Great! We got postgres running and available on our cluster. Let’s login to the container and create a database that will be used by the rails portal to store its data.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl get pods
NAME                         READY   STATUS    RESTARTS   AGE
nginx-dep-776c646dc6-g4w9x   1/1     Running   0          17m
postgres-6969669b9f-4f42h    1/1     Running   0          2m
% kubectl &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; postgres-6969669b9f-4f42h &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; /bin/sh
/ &lt;span class=&quot;c&quot;&gt;# su postgres&lt;/span&gt;
/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; postgres
&lt;span class=&quot;nv&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# CREATE DATABASE railsportal;&lt;/span&gt;
CREATE DATABASE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Through the first command we copied the name of the pod. Then the next command connected to the running container, and mounted its shell (tty) in interactive mode with our terminal and then ran /bin/sh
on the terminal. This directly dropped us into the container’s shell, wehere we switched to the user &lt;code class=&quot;highlighter-rouge&quot;&gt;postgres&lt;/code&gt;, then ran psql and created a database. Logging-in to a running container comes handy
a lot during debugging sessions.&lt;/p&gt;

&lt;h4 id=&quot;step-8-deploy-the-rails-application&quot;&gt;Step 8. Deploy the rails application&lt;/h4&gt;

&lt;p&gt;Since, we pushed our rails application to a private docker repository on docker hub and we do not want the world to be able to access it because it has our intellectual property (;p),
Kubernetes won’t be able to pull the image without authentication information. Let’s create a secret that stores our docker hub username and password.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl create secret docker-registry dockeraccess &lt;span class=&quot;nt&quot;&gt;--docker-server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://index.docker.io/v1/ &lt;span class=&quot;nt&quot;&gt;--docker-username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YourDockerHubUsername &lt;span class=&quot;nt&quot;&gt;--docker-password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YourDockerHubPassword &lt;span class=&quot;nt&quot;&gt;--docker-email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YourDockerHubEmail
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The deployment yml file looks as follows:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/0da2905368a607196a02108e47628bee.js&quot;&gt; &lt;/script&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; rails-portal-dep.yml
deployment.extensions/railsportal created
service/railsportal created
% kubectl get pods
NAME                           READY   STATUS    RESTARTS   AGE
nginx-dep-776c646dc6-g4w9x     1/1     Running   0          1h
postgres-6969669b9f-4f42h      1/1     Running   0          1h
railsportal-7d6d74f865-n6x56   1/1     Running   0          31s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;If your container status is CrashLoopBackoff because of some changes you made, you may debug by using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl describe pod PodName&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We need to make changes to nginx config so that nginx forwards all the requests to RailsPortal. For that, let’s go back and change the config so that we pass a nginx config file
while starting the container. Create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/5a1c295e457121234407136c80a23bd2.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Create another file named &lt;code class=&quot;highlighter-rouge&quot;&gt;railsportal.nginx.conf&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/58a6630d678e0ffabfb88c4eece4caaa.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Now create two config maps for these files in the cluster:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl create configmap nginxconfig &lt;span class=&quot;nt&quot;&gt;--from-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./nginx.conf
configmap/nginxconfig created
% kubectl create configmap railsportalnginxconfig &lt;span class=&quot;nt&quot;&gt;--from-file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./railsportal.nginx.conf
configmap/railsportalnginxconfig created
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Update the &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx-dep.yml&lt;/code&gt; and append the config map settings at the end of the file so that it becomes like below:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/739dfe55fa710d8c1cffd5bc63bb99c5.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Now apply the updated configuration for nginx to the cluster:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; nginx-dep.yml
deployment.apps/nginx-dep configured
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Opening the website with the public IP should show the rails portal. You can check the logs by running &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl logs PodName&lt;/code&gt; where PodName should be replaced with the name of the pod for rails
portal that comes up when you run &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl get pods&lt;/code&gt;. If things are not working as expected, you may try logging into the container and poke around.&lt;/p&gt;

&lt;h3 id=&quot;home-work&quot;&gt;Home work&lt;/h3&gt;

&lt;p&gt;You can try deploying another application on the same cluster. A ExpressJS webapp, talking to a mongoDB database would be a good exercise. You may also go ahead and figure out how to enable auto
scaling. And you may try doing this on Azure or AWS and figure which one comes up cheapest.&lt;/p&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next steps&lt;/h3&gt;

&lt;p&gt;Now that we have successfully setup our rails application in Kubernetes, in the next article we will do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enable HTTPS access with Letsencrypt certs and setup auto renew&lt;/li&gt;
  &lt;li&gt;Make nginx serve static assets, instead of Rails&lt;/li&gt;
  &lt;li&gt;Setup auto scaling for times of high load&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Prabhakar Kumar</name></author><category term="cloud" /><category term="kubernetes" /><category term="docker" /><summary type="html">TL;DR</summary></entry><entry><title type="html">Make your if statements concise</title><link href="http://techbeat.in/2018/03/17/make-your-if-statements-concise.html" rel="alternate" type="text/html" title="Make your if statements concise" /><published>2018-03-17T07:47:27-07:00</published><updated>2018-03-17T07:47:27-07:00</updated><id>http://techbeat.in/2018/03/17/make-your-if-statements-concise</id><content type="html" xml:base="http://techbeat.in/2018/03/17/make-your-if-statements-concise.html">&lt;p&gt;Sometimes you may encounter a situation where you need to do something if two conditions are satisfied or they both are not satisfied; and do something else
if exactly one of them is satisfied. An example would be:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultFromServer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultFromServer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Both servers are aware or unaware of the operation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultFromServer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultFromServer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Only one server is aware of the operation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These conditions look messy. We can fix them using XOR! XOR returns true if two conditions are different and false if both conditions are same.
So we can write the above complexity as:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Only one server is aware of the operation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Both servers are aware or unaware of the operation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reverse of XOR is EX-NOR. And interesting thing about that is, in case of booleans EX-NOR is equivalent to both conditions being equal. So, it is also
called as equality gate. Hence, we can write:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resultFromServer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Both servers are aware or unaware of the operation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Only one server is aware of the operation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doSomethingElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Prabhakar Kumar</name></author><category term="programming" /><summary type="html">Sometimes you may encounter a situation where you need to do something if two conditions are satisfied or they both are not satisfied; and do something else if exactly one of them is satisfied. An example would be:</summary></entry><entry><title type="html">Here’s a fluent builder in C#</title><link href="http://techbeat.in/2018/03/17/heres-a-fluent-builder-in-c-number.html" rel="alternate" type="text/html" title="Here's a fluent builder in C#" /><published>2018-03-17T07:31:34-07:00</published><updated>2018-03-17T07:31:34-07:00</updated><id>http://techbeat.in/2018/03/17/heres-a-fluent-builder-in-c-number</id><content type="html" xml:base="http://techbeat.in/2018/03/17/heres-a-fluent-builder-in-c-number.html">&lt;p&gt;A fluent builder makes creating objects more readable than constructors and more concise than setting properties through setters
on an uninitialized object.
Java devs can use Lombok’s &lt;code class=&quot;highlighter-rouge&quot;&gt;@Builder&lt;/code&gt; annotation to get a fluent builder wired into their classes. Unfortunately, in C# world
no such thing exists. So here’s how you can roll out your own.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


  &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;region&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fluent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WithName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WithType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endregion&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, to construct and object you can simply use:&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WithName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Tommy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WithType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;update&quot;&gt;Update&lt;/h2&gt;

&lt;p&gt;C# doesn’t need this. I figured it out after reading and writing lot of C# code. C# already has a nice intializer which can be used instead
of a fluent builder:&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Tommy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Dog&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Prabhakar Kumar</name></author><category term="c-sharp" /><category term="design-patterns" /><summary type="html">A fluent builder makes creating objects more readable than constructors and more concise than setting properties through setters on an uninitialized object. Java devs can use Lombok’s @Builder annotation to get a fluent builder wired into their classes. Unfortunately, in C# world no such thing exists. So here’s how you can roll out your own.</summary></entry><entry><title type="html">Boot linux from grub rescue prompt</title><link href="http://techbeat.in/2018/01/14/boot-linux-from-grub-rescue-prompt.html" rel="alternate" type="text/html" title="Boot linux from grub rescue prompt" /><published>2018-01-14T06:50:50-08:00</published><updated>2018-01-14T06:50:50-08:00</updated><id>http://techbeat.in/2018/01/14/boot-linux-from-grub-rescue-prompt</id><content type="html" xml:base="http://techbeat.in/2018/01/14/boot-linux-from-grub-rescue-prompt.html">&lt;p&gt;If you have a dual boot setup of a Linux based OS and Windows 10, and you have setup grub to choose which OS
to boot; you might have experienced the &lt;em&gt;grub rescue prompt&lt;/em&gt; which comes up after a Windows 10 update screws up
with the boot files.&lt;/p&gt;

&lt;p&gt;Panic not, for it’s easy to get back to your beloved Linux distro and fix grub. Here are the steps.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Find out the Linux partition (skip, if you already know)
    &lt;ul&gt;
      &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; and it should show you a list of partitions like &lt;code class=&quot;highlighter-rouge&quot;&gt;(hd0,msdos1) (hd0,msdos2) ...&lt;/code&gt; or in the form &lt;code class=&quot;highlighter-rouge&quot;&gt;(hd0,gpt1), (hd0,gpt2) ...&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Run ls with the name of the partition followed by a / to see the files on the partition. Like so &lt;code class=&quot;highlighter-rouge&quot;&gt;ls (hd0,gpt1)/&lt;/code&gt;. Remember, that forward slash is important. You have to do this for each parition until you find your linux partition - i.e. you see the list of files named &lt;code class=&quot;highlighter-rouge&quot;&gt;dev, proc, usr, etc, mnt&lt;/code&gt; etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Set the grub modules prefix
    &lt;ul&gt;
      &lt;li&gt;Run this &lt;code class=&quot;highlighter-rouge&quot;&gt;set prefix=(hd0,msdos3)/boot/grub&lt;/code&gt;. This assumes, your Linux partition in previous step was msdos3.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Set the root partition
    &lt;ul&gt;
      &lt;li&gt;You can set the linux partition as your root partition by running &lt;code class=&quot;highlighter-rouge&quot;&gt;set root=(hd0,msdos3)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Load the needed modules
    &lt;ul&gt;
      &lt;li&gt;We need to load the linux module to be able to boot Linux. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;insmod linux&lt;/code&gt; to do that.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Find where your kernel and initramfs are located
    &lt;ul&gt;
      &lt;li&gt;You can run &lt;code class=&quot;highlighter-rouge&quot;&gt;ls /boot/&lt;/code&gt; and it should show a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;vmlinuz-linux&lt;/code&gt;. That’s your Kernel. At least that’s how it is named in Arch Linux and related distros like Antergos and Manjaro. Kernel and Ramdisk have different names on different distros. Centos, Fedora and RHEL have names similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;vmlinuz-3.10.0-693.11.1.el7.x86_64&lt;/code&gt; for the Kernel. I assume you are smart enough to figure the naming out.&lt;/li&gt;
      &lt;li&gt;You can similarly find your initramfs image. Usually it is named something like &lt;code class=&quot;highlighter-rouge&quot;&gt;initramfs-linux.img&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Caveats to look out for when finding the Kernel and initramfs image files - Number one, if the file names are versioned, choose the latest ones. Number two, choose the same version for Kernel and initramfs. And the last and number three, don’t choose the names that contain &lt;code class=&quot;highlighter-rouge&quot;&gt;rescue&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;memtest&lt;/code&gt;. They are not the ones we are interested in.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Boot Linux!
    &lt;ul&gt;
      &lt;li&gt;Having found out the Kernel and Ramdisk images, let’s load them up. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;linux /boot/vmlinuz-linux root=/dev/sda3 fb rw quiet&lt;/code&gt;. sda3 can probably be hda3 if you have an older machine. And the digit at the end should be same as the root partition number we found in the first step i.e. msdos3 in my case. Now load the Ramdisk by running &lt;code class=&quot;highlighter-rouge&quot;&gt;initrd initramfs-linux.img&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Having loaded ‘em both, let’s boot. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;boot&lt;/code&gt; and bingo, your system should now boot normally!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fix grub so that you don’t have to go through this ordeal next time
    &lt;ul&gt;
      &lt;li&gt;Running &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo grub-install /dev/sda&lt;/code&gt; or in some cases hda instead of sda, should reinstall grub correctly and fix your booting problems.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Prabhakar Kumar</name></author><category term="linux" /><summary type="html">If you have a dual boot setup of a Linux based OS and Windows 10, and you have setup grub to choose which OS to boot; you might have experienced the grub rescue prompt which comes up after a Windows 10 update screws up with the boot files.</summary></entry><entry><title type="html">Ship a REST API with Node, ES6 and MongoDB - Part 1</title><link href="http://techbeat.in/2017/03/22/bootstrap-a-restful-api-app-with-node-es6-mongo-linux.html" rel="alternate" type="text/html" title="Ship a REST API with Node, ES6 and MongoDB - Part 1" /><published>2017-03-22T09:22:40-07:00</published><updated>2017-03-22T09:22:40-07:00</updated><id>http://techbeat.in/2017/03/22/bootstrap-a-restful-api-app-with-node-es6-mongo-linux</id><content type="html" xml:base="http://techbeat.in/2017/03/22/bootstrap-a-restful-api-app-with-node-es6-mongo-linux.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;NodeJS has been gaining a lot of traction recently, especially for web applications. Lots of new web applications
are now being built with tools from  the Node ecosystem. A possible reason is the umpteen number of javascript
developers out in the wild. Other one is  the blazing speed of
&lt;a href=&quot;https://en.wikipedia.org/wiki/V8_(JavaScript_engine)&quot;&gt;V8 engine&lt;/a&gt;. Heck, even shiny desktop apps are now being built
with Node viz. Popcorn Time.&lt;/p&gt;

&lt;p&gt;In this post I will walk through everything I did to ship an API app. Ship as in - ready to serve production traffic.&lt;/p&gt;

&lt;h3 id=&quot;about-the-stack&quot;&gt;About the stack&lt;/h3&gt;
&lt;p&gt;We will be using &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt; as our web app framework. Express is minimalistic, fast and quietly
gets out of our way when you want to detour through the dirt road. It is unlike convention over configuration style in
&lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt; and &lt;a href=&quot;https://playframework.com/&quot;&gt;Play framework&lt;/a&gt; where you are good as long as you
follow the conventions recommended by the framework. Going gets tough, if you start deviating. There are frameworks
built specifically for facilitating API building. An example would be &lt;a href=&quot;http://restify.com/&quot;&gt;Restify&lt;/a&gt;. The reason of
not choosing such a framework for this exercise is to understand the intricacies of building an API. Restify would
shield us from understanding lots of stuff.&lt;/p&gt;

&lt;p&gt;Also, we wil be writing our javascript in &lt;a href=&quot;http://es6-features.org/&quot;&gt;ES6&lt;/a&gt; which is cleaner and hands down a better
language than the javascript specced in ES5. Latest version of node still doesn’t fully support ES6, so we will use a
transpiler named &lt;a href=&quot;http://babeljs.io/&quot;&gt;Babel&lt;/a&gt; which transpiles code written by us into code conforming to ES5 for which
node has full support. In the future when node catches up, we can turn off transpilation and run our ES6 code directly
with node.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mongodb.com/&quot;&gt;MongoDB&lt;/a&gt; will be our database. It is a document oriented NoSQL database. What that means
is - it is unlike the RDBMSes like MySQL or Oracle which let you model the world by defining a schema in form
of tables recording their properties and then linking them with primary and foreign keys. With MongoDB we model our
worldly entities in form of documents which are similar to JSON objects . The biggest advantage of NoSQL databases like
MongoDB is that they are designed to be horizontally scalable - whenever we need to increase performance, we just
add few more machines to the DB cluster and the database engine takes care of redistributing data and query traffic
across all available machines. RDBMSes are limited by theory, in terms of horizontal scalability. A discussion of this
is beyond the scope of this article, but if you are interested in knowing more about it you can browse the interwebs
for this nuisance called CAP theorem.&lt;/p&gt;

&lt;h3 id=&quot;about-the-project&quot;&gt;About the project&lt;/h3&gt;
&lt;p&gt;We are going to build an API which can power a web application and/or a mobile app. The app is a social code snippet
sharing system where the users can share frequently encountered code snippets that are used in a developer’s day to
day life for solving mundane problems which they are too lazy to code themselves. Usually, as developers we google for
our problem, find link to a stackoverflow question and copy the snippet from there and use from. In our case we let
the users share the snippet, enter a description, select the language, optionally add some tags and publish it. A user
can also thumb up a snippet or mark it as junk. We also allow some experienced users to edit the snippets and/or
descriptions for clarity. We define experience with a formula derived from number of upvotes to their questions by
other users, their age on the site and their time spent on the site. Also, we do away with logins through passwords. 
We provide OAuth based logins through Google, Facebook, Twitter etc. Apart from these functional features, we will
also do some non-functional stuff like generate an SEO friendly URL for each snippet so that Googlebot can find our
snippets and list in search results. Let’s wear the product manager hat for a moment and write down the high level
product requirements for our application.&lt;/p&gt;

&lt;h4 id=&quot;as-a-guest-user-i-should-be-able-to&quot;&gt;As a guest user I should be able to&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;search for snipppets through description and/or code matches&lt;/li&gt;
  &lt;li&gt;list snippets by language, and sort them by
    &lt;ul&gt;
      &lt;li&gt;most voted&lt;/li&gt;
      &lt;li&gt;most viewed&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;login using Google, Facebook or Twitter auth&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;as-a-logged-in-user-i-should-be-able-to&quot;&gt;As a logged-in user I should be able to&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;perform snippet operations
    &lt;ul&gt;
      &lt;li&gt;post a snippet&lt;/li&gt;
      &lt;li&gt;edit my posted snippets&lt;/li&gt;
      &lt;li&gt;view a snippet and see all previous versions of a snippet, if they have been edited&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;perform profile operations
    &lt;ul&gt;
      &lt;li&gt;view my profile&lt;/li&gt;
      &lt;li&gt;refresh upstream information in the profile&lt;/li&gt;
      &lt;li&gt;view others’ profiles&lt;/li&gt;
      &lt;li&gt;view activity of a user, like snippets posted, snippets upvoted, snippets edited etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;perform friendship operations
    &lt;ul&gt;
      &lt;li&gt;send friend requests to people&lt;/li&gt;
      &lt;li&gt;accept/reject others’ friend requests&lt;/li&gt;
      &lt;li&gt;ignore/block a user&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;perform feed operations
    &lt;ul&gt;
      &lt;li&gt;view a feed which shows my friends’ activity on the website&lt;/li&gt;
      &lt;li&gt;like and comment on activities in the feed&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;perform leaderboard operations
    &lt;ul&gt;
      &lt;li&gt;view leaderboard of snippets&lt;/li&gt;
      &lt;li&gt;view leaderboard of users&lt;/li&gt;
      &lt;li&gt;filter leaderboard by language, user location etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;perform messaging operations
    &lt;ul&gt;
      &lt;li&gt;send private messages to my friends&lt;/li&gt;
      &lt;li&gt;send private messages to non-friends&lt;/li&gt;
      &lt;li&gt;view my inbox, categorized with messages from friends/non-friends&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-api&quot;&gt;Why API?&lt;/h3&gt;
&lt;p&gt;Let’s take a step back and understand why should we write an API? Why not a simple MVC web application? APIs are great
for scaling, technically as well as logistically. With an API, we define a set of operations, which cover all the
interactions of users and other systems with our application. Then we write client apps, which talk to the API and get
the job done. So, next time you swipe left in gmail to archive an email, you should know that an API call has been
made by the GMail app residing on your phone, to the GMail servers along with some parameters which did the actual
archiving of the email.&lt;/p&gt;

&lt;p&gt;What is logistic stability? Ok, I just made up this term! With an API as contract in place, the client app can
independently scale with the actual functional implementation. We can have different people (or teams) working on the
different client apps. As long as they have the API spec they can work independently. Also, the same API can power a
native iOS app, an Android app, a mobile website and a web application. These client apps make API calls to fetch and
display relevant data and perform operations upon user interactions.&lt;/p&gt;

&lt;p&gt;In terms of technical scalability, the people working on the backend can independently scale the most used operations
in the API. For instance, if we are getting millions of calls for our compute intensive &lt;code class=&quot;highlighter-rouge&quot;&gt;findBugs&lt;/code&gt; operation in a
day, we can intelligently increase the resources it needs. One way would be to have a dedicated independent machine of
high configuration just for this operation in the API. And we leverage the power of distributed systems and horizontal
scalability! We will get into the details of this when we talk about shipping once we are code complete.&lt;/p&gt;

&lt;h2 id=&quot;dev-env-setup&quot;&gt;Dev Env setup&lt;/h2&gt;
&lt;p&gt;Before we design our data model, let’s get our hands dirty a bit, write a hello world app with Express and get MongoDB
setup on our workstation.&lt;/p&gt;

&lt;p&gt;I am an &lt;a href=&quot;https://www.archlinux.org/&quot;&gt;Arch Linux&lt;/a&gt; devotee. The instructions here should work perfectly on Arch. The
onus of changing the commands to suit your package manager(apt, yum, emerge, brew) is upto you.&lt;/p&gt;

&lt;h3 id=&quot;install-node-npm-and-mongodb&quot;&gt;Install node, npm and mongodb&lt;/h3&gt;
&lt;p&gt;The following commands will install &lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mongodb&lt;/code&gt; for us. &lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt; is the javascript runtime executable
which is actually going to run our code. &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt; is the package manager which takes care of resolving dependencies on 
third party libraries, downloading them and setting up their paths correctly so that we have a lot of pre-written
code in form of modules available at our disposal.&lt;/p&gt;

&lt;p&gt;Mongodb will also be started and enabled for autostart. If you don’t want it to be auto started everytime you boot,
don’t execute the last command.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pacman &lt;span class=&quot;nt&quot;&gt;-Syu&lt;/span&gt; node npm mongodb

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start mongodb

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;mongodb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As of this writing, I got node 7.2, npm 4.0 and mongodb 3.2. The javascript ecosystem is a very fast moving one. Some
of the code mentioned hereon might get obsolete in a couple of years but the general idea remains the same.&lt;/p&gt;

&lt;h3 id=&quot;setup-the-initial-packagejson&quot;&gt;Setup the initial package.json&lt;/h3&gt;
&lt;p&gt;In the node world &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; is the file which contains the details of our dependencies and run configurations.
In Rails world, it is analogous to &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; but on steroids. In java world it is kind of analogous to &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;
or a &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/Documents/Projects/js-snipcode
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
npm init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The second command might seem unfamiliar. !$ represents the last paramter of previous command in bash and zsh. So it
will just take you to the newly created directory from the previous step.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt; is interactive and it will first ask you for a project name. Then configure the version and description.
Next it asks for the entry point for the app. You can leave it as &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;. Keep pressing enter to accept the
defaults for other fields or change if you like. For now we ignore the test command. A &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file will be
created in the end.&lt;/p&gt;

&lt;h3 id=&quot;install-express&quot;&gt;Install Express&lt;/h3&gt;
&lt;p&gt;Express is the web framework library that we are going to use. Now let’s add a dependency on Express, add babel
transpilation of ES6 and get from zero to “Hello World!”.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;express &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; babel-cli babel-preset-latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running the above commands will download Express, babel-cli and babel’s latest preset. &lt;code class=&quot;highlighter-rouge&quot;&gt;--save&lt;/code&gt; flag makes an entry in
the &lt;code class=&quot;highlighter-rouge&quot;&gt;dependencies&lt;/code&gt; section of package.json. Guess what does the &lt;code class=&quot;highlighter-rouge&quot;&gt;--save-dev&lt;/code&gt; flag do? You got it right! It makes an
entry in &lt;code class=&quot;highlighter-rouge&quot;&gt;devDependencies&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Dev dependencies are different from dependencies in that they
are not required for running the app. They are only used during development, for instance for transpilation during
build. Let’s also add two target scripts named &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Running &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; will
tell babel to transpile everything in &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; directory recursively and output the transpiled files in &lt;code class=&quot;highlighter-rouge&quot;&gt;dist&lt;/code&gt; directory.
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm run start&lt;/code&gt; in the root directory of our project will start our web server by running the command
&lt;code class=&quot;highlighter-rouge&quot;&gt;node dist/index.js&lt;/code&gt;. Also, don’t forget &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir src; mv index.js src&lt;/code&gt;. Here’s the updated &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;js-snipcode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;API in NodeJS for the Snipcode project.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;echo &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Error: no test specified&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;amp;&amp;amp; exit 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;babel src -d dist --presets latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node dist/index.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Prabhakar Kumar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ISC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;express&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^4.14.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;babel-cli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^6.18.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;babel-preset-latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^6.18.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;zero-to-hello-world&quot;&gt;Zero to Hello World!&lt;/h3&gt;
&lt;p&gt;Let’s edit our &lt;code class=&quot;highlighter-rouge&quot;&gt;src/index.js&lt;/code&gt; and write relevant code to make a Hello World app.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello World!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Server is up on port 3000!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s build and run.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run build
npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If everything went well as we discussed, you will see a message on the console that says server is up on port 3000.
Now if you fire up firefox or chromium and go to &lt;a href=&quot;http://localhost:3000&quot;&gt;localhost:3000&lt;/a&gt;, you will see the evergreen
‘Hello world!’ message staring at you on a white screen.&lt;/p&gt;

&lt;p&gt;Before we start writing more code, I’ll explain the meaning of the lines in our Hello World web app. But, before that
let’s pivot and focus on learning our database and design a basic data model.&lt;/p&gt;

&lt;h3 id=&quot;play-with-mongo-console&quot;&gt;Play with mongo console&lt;/h3&gt;
&lt;p&gt;Let’s play with mongo console a bit to gain some familiarity with it.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mongo
MongoDB shell version: 3.2.10
connecting to: test
Welcome to the MongoDB shell.
For interactive help, type &quot;help&quot;.
For more comprehensive documentation, see
        http://docs.mongodb.org/
Questions? Try the support group
        http://groups.google.com/group/mongodb-user
Server has startup warnings:
2016-12-04T07:40:24.545-0500 I CONTROL  [initandlisten]
2016-12-04T07:40:24.545-0500 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.
2016-12-04T07:40:24.545-0500 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2016-12-04T07:40:24.545-0500 I CONTROL  [initandlisten]
&amp;gt; show databases
local  0.000GB
&amp;gt; use snipcode
switched to db snipcode
&amp;gt; db.users.insert({name: &quot;John Doe&quot;, country: &quot;United States&quot;, &quot;sex&quot;: 'M', dob: ISODate('1970-01-01')})
WriteResult({ &quot;nInserted&quot; : 1 })
&amp;gt; db.users.find()
{ &quot;_id&quot; : ObjectId(&quot;58441a27d01af6e5b1ae6f74&quot;), &quot;name&quot; : &quot;John Doe&quot;, &quot;country&quot; : &quot;United States&quot;, &quot;sex&quot; : &quot;M&quot;, &quot;dob&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;) ers.insert({name: &quot;Jane Doe&quot;, country: &quot;United States&quot;, &quot;sex&quot;: 'F', dob: ISODate('1970-01-01')})
WriteResult({ &quot;nInserted&quot; : 1 })
&amp;gt; db.users.find()
{ &quot;_id&quot; : ObjectId(&quot;58441a27d01af6e5b1ae6f74&quot;), &quot;name&quot; : &quot;John Doe&quot;, &quot;country&quot; : &quot;United States&quot;, &quot;sex&quot; : &quot;M&quot;, &quot;dob&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;) }
{ &quot;_id&quot; : ObjectId(&quot;58441a5bd01af6e5b1ae6f75&quot;), &quot;name&quot; : &quot;Jane Doe&quot;, &quot;country&quot; : &quot;United States&quot;, &quot;sex&quot; : &quot;F&quot;, &quot;dob&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;) }
&amp;gt; db.users.find({sex: 'F'})
{ &quot;_id&quot; : ObjectId(&quot;58441a5bd01af6e5b1ae6f75&quot;), &quot;name&quot; : &quot;Jane Doe&quot;, &quot;country&quot; : &quot;United States&quot;, &quot;sex&quot; : &quot;F&quot;, &quot;dob&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;) }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similar to MySQL and friends (MariaDB, Aurora), Mongodb organizes it’s data in databases. We don’t need to explicitly
create a database unlike MySQL. It gets created as soon as we try to write something to it. Inside a Mongodb database,
the database is organized in collections. A collection is analogous to tables in RDBMS, and more flexible. A
collection doesn’t have a fixed schema. So, one document (record/row in RDBMS) can have fields different from others
in the same collection. In the above example, we switched to database named &lt;code class=&quot;highlighter-rouge&quot;&gt;snipcode&lt;/code&gt;. Then we inserted a document
describing a user named ‘John Doe’. Upon doing a &lt;code class=&quot;highlighter-rouge&quot;&gt;find()&lt;/code&gt; (which is analogous to SQL’s SELECT) on that collection we
got the record, along with a unique record ID called ObjectID. Then we inserted another record for &lt;code class=&quot;highlighter-rouge&quot;&gt;Jane Doe&lt;/code&gt;. Then we
ran a query which returns all female users. For this, we provided the query condition &lt;code class=&quot;highlighter-rouge&quot;&gt;sex: 'F'&lt;/code&gt; which is similar to
WHERE sex = ‘F’ in SQL.&lt;/p&gt;

&lt;p&gt;As of now, this much familiarity is enough for us to get started. We will dive deeper as and when we need.&lt;/p&gt;

&lt;h2 id=&quot;next-part&quot;&gt;Next part&lt;/h2&gt;

&lt;p&gt;In this part we got bootstrapped and got our hands dirty. In the next part we will start with data modeling and
continue further. Stay tuned for it.&lt;/p&gt;</content><author><name>Prabhakar Kumar</name></author><category term="linux" /><category term="nodejs" /><category term="mongodb" /><category term="es6" /><summary type="html">Introduction NodeJS has been gaining a lot of traction recently, especially for web applications. Lots of new web applications are now being built with tools from the Node ecosystem. A possible reason is the umpteen number of javascript developers out in the wild. Other one is the blazing speed of V8 engine. Heck, even shiny desktop apps are now being built with Node viz. Popcorn Time.</summary></entry><entry><title type="html">Elegant solutions to common interview problems - Part 1 - Linked Lists</title><link href="http://techbeat.in/2017/03/10/elegant-solutions-to-common-interview-problems.html" rel="alternate" type="text/html" title="Elegant solutions to common interview problems - Part 1 - Linked Lists" /><published>2017-03-10T10:48:24-08:00</published><updated>2017-03-10T10:48:24-08:00</updated><id>http://techbeat.in/2017/03/10/elegant-solutions-to-common-interview-problems</id><content type="html" xml:base="http://techbeat.in/2017/03/10/elegant-solutions-to-common-interview-problems.html">&lt;blockquote&gt;
  &lt;p&gt;Define a linked list node for integers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reverse a singly linked list in-place iteratively&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reverseIterative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Initialize two pointers, current(ptr) and previous&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// At each node, we point it's next to previous&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Advance both pointers&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Point head to last node&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reverse a singly linked list in-place recursively&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reverseRecursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverseRecursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Point head's next node towards head&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Traverse a linked list recursively&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;traverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;traverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Traverse a linked list recursively in reverse order&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;traverseReverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;traverseReverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Print nth element of linked list (counted from 1)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printNthElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printNthElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Print nth element from last in linked list&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printNthLastElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printNthLastElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Prabhakar Kumar</name></author><category term="computer-science" /><summary type="html">Define a linked list node for integers</summary></entry><entry><title type="html">Compile goaccess from source on CentOS 7</title><link href="http://techbeat.in/2016/07/07/compile-goaccess-from-source-on-centos-7.html" rel="alternate" type="text/html" title="Compile goaccess from source on CentOS 7" /><published>2016-07-07T19:00:32-07:00</published><updated>2016-07-07T19:00:32-07:00</updated><id>http://techbeat.in/2016/07/07/compile-goaccess-from-source-on-centos-7</id><content type="html" xml:base="http://techbeat.in/2016/07/07/compile-goaccess-from-source-on-centos-7.html">&lt;p&gt;&lt;a href=&quot;https://goaccess.io&quot;&gt;Goaccess&lt;/a&gt; is a neat little utility which scans through your web server (I use nginx) logs and generates a nice HTML report of 
your site’s access statistics. Here is a &lt;a href=&quot;http://rt.goaccess.io&quot;&gt;sample from their site&lt;/a&gt;. I run CentOS 7 on an EC2 Instance where I run a pet project. I wanted a light web analyzer that just works. I have
&lt;a href=&quot;https://fedoraproject.org/wiki/EPEL&quot;&gt;epel&lt;/a&gt; enabled on my instance so I just installed goaccess by &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo yum install goaccess&lt;/code&gt;. It worked and I was able
to see some stats. But then I figured out that the version from repositories is quite an old one at 0.9.8. The latest one is 1.0.2 from the website.
So, I just uninstalled it &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo yum remove goaccess&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I downloaded the source tarball and after a few hiccups I was able to get it running. There are two quirks you need to watch out for. First one is
that, enabling geoip in goaccess requires installation of maxmind’s geoip database. The installed database from yum is very small, so you need to
update it and change symlink /usr/share/GeoIP/GeoIP.dat to point to /usr/share/GeoIP/GeoLiteCountry.dat. Second quirk is that by default the configure
script doesn’t figure out the geoip devel libs path so you need to manually point to it while configuring.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;GeoIP
geoipupdate
&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /usr/share/GeoIP.dat
&lt;span class=&quot;nb&quot;&gt;sudo ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /usr/share/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;GeoLiteCountry,GeoIP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.dat 

wget http://tar.goaccess.io/goaccess-1.0.2.tar.gz
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xzvf&lt;/span&gt; goaccess-1.0.2.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;goaccess-1.0.2
&lt;span class=&quot;nv&quot;&gt;LD_FLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-L/usr/lib64/'&lt;/span&gt; ./configure &lt;span class=&quot;nt&quot;&gt;--enable-utf8&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--enable-geoip&lt;/span&gt;
make
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also created a daily crontab entry to generate reports daily and put it in my &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; folder of rails directory, all the files in which I serve
statically from nginx. So I can just type http://mydomain.com/access.html and see the reports. Here is my crontab entry.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sh crontab
@daily /bin/zcat -f /var/log/nginx/access.log* | /usr/local/bin/goaccess -a -o /home/ec2-user/my_rails_dir/public/access.html
&lt;/code&gt;&lt;/p&gt;</content><author><name>Prabhakar Kumar</name></author><category term="linux" /><category term="web-apps" /><summary type="html">Goaccess is a neat little utility which scans through your web server (I use nginx) logs and generates a nice HTML report of your site’s access statistics. Here is a sample from their site. I run CentOS 7 on an EC2 Instance where I run a pet project. I wanted a light web analyzer that just works. I have epel enabled on my instance so I just installed goaccess by sudo yum install goaccess. It worked and I was able to see some stats. But then I figured out that the version from repositories is quite an old one at 0.9.8. The latest one is 1.0.2 from the website. So, I just uninstalled it sudo yum remove goaccess.</summary></entry><entry><title type="html">Configure DatabaseCleaner with Rspec for Mongoid 5 and beyond</title><link href="http://techbeat.in/2016/06/26/configure-database-cleaner-with-rspec-for-mongoid-5-and-beyond.html" rel="alternate" type="text/html" title="Configure DatabaseCleaner with Rspec for Mongoid 5 and beyond" /><published>2016-06-26T18:05:22-07:00</published><updated>2016-06-26T18:05:22-07:00</updated><id>http://techbeat.in/2016/06/26/configure-database-cleaner-with-rspec-for-mongoid-5-and-beyond</id><content type="html" xml:base="http://techbeat.in/2016/06/26/configure-database-cleaner-with-rspec-for-mongoid-5-and-beyond.html">&lt;p&gt;&lt;a href=&quot;https://github.com/DatabaseCleaner/database_cleaner&quot;&gt;Database Cleaner&lt;/a&gt; is a nifty gem for streamlining tests. Configuring it is straightforward
but it didn’t work for me out of the box for Mongoid 5.&lt;/p&gt;

&lt;p&gt;Here’s my Gemfile segment for testing.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;factory_girl_rails&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rspec-rails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 3.4'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'faker'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'database_cleaner'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;git: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'git://github.com/DatabaseCleaner/database_cleaner.git'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I added a &lt;code class=&quot;highlighter-rouge&quot;&gt;require 'support/database_cleaner'&lt;/code&gt; in my &lt;code class=&quot;highlighter-rouge&quot;&gt;spec_helper&lt;/code&gt;. And here’s my &lt;code class=&quot;highlighter-rouge&quot;&gt;database_cleaner.rb&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:suite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:truncation&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;DatabaseCleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clean&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When I ran my spec, I was greeted with an unexpected ugly error.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/prabhakar/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/bundler/gems/database_cleaner-f052d64d3be9/lib/database_cleaner/mongo2/truncation_mixin.rb:29:in `collections': undefined method `collections' for #&amp;lt;Mongo::Client:0x47021052998580 cluster=127.0.0.1:27017&amp;gt; (NoMethodError)
	from /home/prabhakar/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/bundler/gems/database_cleaner-f052d64d3be9/lib/database_cleaner/mongo2/truncation_mixin.rb:9:in `clean'
	from /home/prabhakar/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/bundler/gems/database_cleaner-f052d64d3be9/lib/database_cleaner/base.rb:92:in `clean'
	from /home/prabhakar/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/bundler/gems/database_cleaner-f052d64d3be9/lib/database_cleaner/configuration.rb:79:in `block in clean'
	from /home/prabhakar/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/bundler/gems/database_cleaner-f052d64d3be9/lib/database_cleaner/configuration.rb:79:in `each'
	from /home/prabhakar/.rbenv/versions/2.3.0/lib/ruby/gems/2.3.0/bundler/gems/database_cleaner-f052d64d3be9/lib/database_cleaner/configuration.rb:79:in `clean'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After looking at the code in the gem, I finally found out what was wrong in it. I created a
&lt;a href=&quot;https://github.com/prabhakar97/database_cleaner/commit/3cf0d1b81e4a118fd173d697f032a9aff4f431de&quot;&gt;commit for fix&lt;/a&gt; and submitted a pull request to
the maintainer. Looking at my commit and the relevant files &lt;a href=&quot;https://github.com/DatabaseCleaner/database_cleaner/blob/master/lib/database_cleaner/mongoid/truncation.rb&quot;&gt;truncation.rb&lt;/a&gt; and &lt;a href=&quot;https://github.com/DatabaseCleaner/database_cleaner/blob/master/lib/database_cleaner/mongo2/truncation_mixin.rb&quot;&gt;truncation_mixin.rb&lt;/a&gt;, you should be able to piece together the problem.&lt;/p&gt;

&lt;p&gt;Meanwhile, if you are using Mongoid 5 and aren’t able to get it working you could simply point to my fork of database_cleaner by updating your Gemfile
to have:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'database_cleaner'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;git: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'git://github.com/prabhakar97/database_cleaner.git'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Prabhakar Kumar</name></author><category term="rails" /><category term="ruby" /><category term="mongodb" /><summary type="html">Database Cleaner is a nifty gem for streamlining tests. Configuring it is straightforward but it didn’t work for me out of the box for Mongoid 5.</summary></entry><entry><title type="html">Starting with Yesod on Arch Linux</title><link href="http://techbeat.in/2016/06/23/starting-with-yesod-on-arch-linux.html" rel="alternate" type="text/html" title="Starting with Yesod on Arch Linux" /><published>2016-06-23T16:59:39-07:00</published><updated>2016-06-23T16:59:39-07:00</updated><id>http://techbeat.in/2016/06/23/starting-with-yesod-on-arch-linux</id><content type="html" xml:base="http://techbeat.in/2016/06/23/starting-with-yesod-on-arch-linux.html">&lt;p&gt;As part of my eagerness to learn Haskell, I thought it might be a good idea to start building real world applications in Haskell. I chose
&lt;a href=&quot;http://www.yesodweb.com/&quot;&gt;Yesod&lt;/a&gt; to start building a dynamic web application backed by as database. However, the getting started page on
Yesod website didn’t exactly work as advertised, probably because the &lt;a href=&quot;http://docs.haskellstack.org/en/stable/README/&quot;&gt;Haskell Stack&lt;/a&gt;
had some API change. These steps worked for me.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install haskell-stack. It lets you develop, build and test Haskell apps without creating dependency version issues across projects.
If you are coming from a ruby world, it is similar to rbenv.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo pacman -S haskell-stack&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Checkout the &lt;em&gt;yesod-mongodb&lt;/em&gt; template. This is going to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;haskell-webapp&lt;/code&gt; directory and checkout stuff from the &lt;code class=&quot;highlighter-rouge&quot;&gt;yesod-mongo&lt;/code&gt; template.
Make sure that you don’t provide a directory name which is the name of a package, like yesod, ghci etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stack new haskell-webapp yesod-mongo&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Install &lt;a href=&quot;https://aur.archlinux.org/packages/libtinfo/&quot;&gt;libtinfo from AUR&lt;/a&gt; because Arch screwed up (from stack perspective). There is
another nuance to take care of. Edit the &lt;em&gt;PKGBUILD&lt;/em&gt; and ensure that the line that simlinks &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/lib/libtinfo.so.5&lt;/code&gt; is uncommented. Otherwise
the next step doesn’t work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Setup GHCi and friends.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stack build yesod-bin cabal-install --install-ghc&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Build the libs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stack build&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hello World!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stack exec -- yesod devel&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To access your server visit &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;</content><author><name>Prabhakar Kumar</name></author><category term="haskell" /><category term="web-apps" /><summary type="html">As part of my eagerness to learn Haskell, I thought it might be a good idea to start building real world applications in Haskell. I chose Yesod to start building a dynamic web application backed by as database. However, the getting started page on Yesod website didn’t exactly work as advertised, probably because the Haskell Stack had some API change. These steps worked for me.</summary></entry></feed>