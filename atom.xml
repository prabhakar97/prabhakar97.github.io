<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Prab's Code Blog]]></title>
  <link href="http://prabhakar97.github.io/atom.xml" rel="self"/>
  <link href="http://prabhakar97.github.io/"/>
  <updated>2014-01-28T15:51:20+05:30</updated>
  <id>http://prabhakar97.github.io/</id>
  <author>
    <name><![CDATA[Prabhakar Kumar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress syntax highlighting issue on Arch Linux]]></title>
    <link href="http://prabhakar97.github.io/blog/2014/01/27/octopress-syntax-highlighting-issue-on-arch-linux/"/>
    <updated>2014-01-27T00:39:00+05:30</updated>
    <id>http://prabhakar97.github.io/blog/2014/01/27/octopress-syntax-highlighting-issue-on-arch-linux</id>
    <content type="html"><![CDATA[<p>If you run Arch Linux and are trying to run <code>rake generate</code> on a Octopress blog, with a post that uses some code and syntax highlighting markdown over it; you will probably see this error:</p>

<pre><code>/plugins/pygments_code.rb:27:in `rescue in pygments': Pygments can't parse unknown language: ruby. (RuntimeError)
</code></pre>

<p>This happens because Arch uses <code>python3</code> as default python, while the world hasn&rsquo;t yet made up their mind to switch. The <em>Pygments</em> gem that Octopress uses, uses <code>python2</code> syntax which Arch&rsquo;s <code>python3</code> doesn&rsquo;t undertand fully and hence raises an error. To fix this, just open this file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/.rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/gems/pygments.rb-0.3.4/lib/pygments/mentos.py
</span></code></pre></td></tr></table></div></figure>


<p>Use your own version, instead of <code>2.1.0</code> that I am using. Change the first line:</p>

<figure class='code'><figcaption><span>mentos.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python </span>
</span></code></pre></td></tr></table></div></figure>


<p>to</p>

<figure class='code'><figcaption><span>mentos.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python2 </span>
</span></code></pre></td></tr></table></div></figure>


<p>After this, your <code>rake generate</code> should succeed. Oh, and yes, this file path is for <code>rbenv</code>. If you use <code>rvm</code> figure out your own path using the command <code>find ~/ -name mentos.py</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby script to generate 3D subtitles from srt files]]></title>
    <link href="http://prabhakar97.github.io/blog/2014/01/27/script-to-generate-3d-subtitles-from-srt-files/"/>
    <updated>2014-01-27T00:09:00+05:30</updated>
    <id>http://prabhakar97.github.io/blog/2014/01/27/script-to-generate-3d-subtitles-from-srt-files</id>
    <content type="html"><![CDATA[<p>So, you&rsquo;ve got a bunch of 3D movies with SRT subtitles which your 3D TV can play from a USB storage and show the subtitles correctly but can not if you are running the movie on your laptop and sending the display to TV over HDMI; for obvious reasons.
The solution is to use <em>.ass</em> format subtitles with your media player(I recommed mplayer/smplayer). Just run this script from a directory that contains all your movies in separate directories under that directory. Make sure, <code>srt</code> file is present in each 3D movie directory and has the same name as the movie file. Also make sure, the directories for 3D movies have 3D in their names somewhere. Moreover, you must have the program <code>sub3dtool</code> installed. Get it from <a href="https://code.google.com/p/sub3dtool/">here</a>. After you run the script, all your 3D movie directories will be populated with .ass files automatically. Remember, VLC media player does not play well with <code>.ass</code> subtitles. It skips many dialogues.</p>

<figure class='code'><figcaption><span>Convert SRT subtitles into ASS</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">entries</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">file</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;3D&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;3D movie found - </span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="s2">. Going ahead to generate .ass subtitle for it&quot;</span>
</span><span class='line'>    <span class="no">Dir</span><span class="o">.</span><span class="n">entries</span><span class="p">(</span><span class="n">file</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file1</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">file1</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;.srt&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Found srt file: </span><span class="si">#{</span><span class="n">file1</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="n">outfile_name</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">file1</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="n">file1</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="mi">3</span><span class="o">]</span><span class="si">}</span><span class="s2">ass&quot;</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Out file name : </span><span class="si">#{</span><span class="n">outfile_name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="sb">`sub3dtool &quot;</span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="sb">/</span><span class="si">#{</span><span class="n">file1</span><span class="si">}</span><span class="sb">&quot; --3dsbs -o &quot;</span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="sb">/</span><span class="si">#{</span><span class="n">outfile_name</span><span class="si">}</span><span class="sb">&quot;`</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;Generated successfully&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>All the movie directories will be populated with corresponding <em>.ass</em> files. Now just run it by <code>mplayer -ass movie_file_name</code>. Use <code>j</code> to cycle through subtitles, <code>f</code> for fullscreen, <code>q</code> to quit mplayer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://prabhakar97.github.io/blog/2013/07/28/hello-world/"/>
    <updated>2013-07-28T01:11:00+05:30</updated>
    <id>http://prabhakar97.github.io/blog/2013/07/28/hello-world</id>
    <content type="html"><![CDATA[<p>Alright fellas, I have switched to Octopress being a ruby lover. I will be posting about code and code and more code in this blog. Mainly there will be lots of scripts that make my daily chores easier, some fixes from my experiences, some puzzle solving and liitle more code.</p>
]]></content>
  </entry>
  
</feed>
